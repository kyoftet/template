// Code generated by ent, DO NOT EDIT.

package ent

import (
	"backend/infrastructure/mysql/ent/schema"
	"backend/infrastructure/mysql/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUserID is the schema descriptor for user_id field.
	userDescUserID := userFields[0].Descriptor()
	// user.UserIDValidator is a validator for the "user_id" field. It is called by the builders before save.
	user.UserIDValidator = userDescUserID.Validators[0].(func(string) error)
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[1].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[2].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescMailAddress is the schema descriptor for mail_address field.
	userDescMailAddress := userFields[3].Descriptor()
	// user.MailAddressValidator is a validator for the "mail_address" field. It is called by the builders before save.
	user.MailAddressValidator = userDescMailAddress.Validators[0].(func(string) error)
}
