services:
  backend:
    container_name: backend
    hostname: backend
    build:
      context: ./backend
      dockerfile: ./docker/Dockerfile
    env_file:
      - .env
    ports:
      - ${BACKEND_PORT}:8000
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - template

  frontend:
    container_name: frontend
    hostname: frontend
    build:
      context: ./frontend
      dockerfile: ./docker/Dockerfile
    ports:
      - ${FRONTEND_PORT}:3000
    networks:
      - template
    tty: true
    stdin_open: true

  mysql:
    container_name: mysql
    build: servers/mysql
    hostname: mysql
    ports:
      - ${MYSQL_PORT}:3306
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_USER: ${MYSQL_ROOT_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      TZ: ${TZ}
    volumes:
      - mysql-store:/var/lib/mysql-files
    networks:
      - template
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      timeout: 5s
      retries: 6
      start_period: 30s

  redis:
    container_name: redis
    build: servers/redis
    hostname: redis
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - template

volumes:
  mysql-store:

networks:
  template:
